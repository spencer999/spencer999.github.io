{"version":3,"sources":["webpack:///static/js/85.6337de0bf5d28aadc368.js","webpack:///./src/views/question/awaitsQuestion.vue?4885","webpack:///./src/views/question/awaitsQuestion.vue","webpack:///src/views/question/awaitsQuestion.vue"],"names":["webpackJsonp","1001","module","__webpack_exports__","__webpack_require__","render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","margin-bottom","_v","width","attrs","placeholder","model","value","queryData","callback","$$v","questionName","expression","size","on","click","initData","ref","data","tableData","type","label","_l","item","key","prop","min-width","minWidth","align","formatter","show-overflow-tooltip","fixed","scopedSlots","_u","fn","scope","list-style","padding","row","status","float","permission","$event","getData","id","_e","current-page","pageNum","page-sizes","page-size","pageSize","layout","total","size-change","userPageSize","current-change","userPage","title","visible","dialogVisible","close-on-click-modal","update:visible","close","dialogClose","rules","label-width","itemWidth","disabled","auto-complete","userName","categoryName","rows","questionDesc","answerDesc","slot","validate","staticRenderFns","esExports","219","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_awaitsQuestion_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_awaitsQuestion_vue___default","n","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_4f1cfdf0_hasScoped_false_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_awaitsQuestion_vue__","normalizeComponent","Component","a","845","exports","_interopRequireDefault","obj","__esModule","default","_promise","e","Error","code","_promise2","_fetch","_fetch2","_dctp","_dctp2","action","validator","rule","trigger","categoryId","tableHeader","column","utils","parseDateTimeStr","created","methods","_this2","$refs","valid","modify","resetData","setData","resetFields","getList","_this","resolve","reject","url","method","params","then","response","result","page","count","catch","deleteCategory","getMessage","msg","showDeleteDialog","_this3","$confirm","confirmButtonText","cancelButtonText","$message","info","query","val"],"mappings":"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K,EAAA5G,EAAA,IH+MI6G,EAAUV,EAAuBS,GG3MrCE,EAAA9G,EAAA,IH+MI+G,EAASZ,EAAuBW,EA2FpCZ,GAAQI,SACJ3E,KAAM,WAOF,OACIgD,UGzSZ,QH0SYP,eGzSZ,EH0SYzC,MACI0B,GGzShB,GH0SgByB,SGzShB,GH0SgBC,aGzShB,GH0SgBE,aGzShB,GH0SgBC,WGxShB,IH0SY8B,OGzSZ,GH0SYvC,OACIS,aAAe+B,UAlBR,SAAkBC,EAAMlG,EAAOE,GAC5B,KAAVF,GACAE,EAAS,GAAIuF,OGzS7B,SAEAvF,KHuToDiG,QGxSpD,UH0SYlG,WACImG,WGzShB,EH0SgBhG,aGzShB,GH0SgBoC,QGzShB,EH0SgBG,SGzShB,GH0SgBX,OGxShB,KH0SYa,MGzSZ,EH0SYjC,aACAyF,cACIvF,MGzShB,SH0SgBI,KGzShB,SH0SgBtB,MGzShB,MH2SgBkB,MGzShB,QH0SgBI,KGzShB,WH0SgBtB,MGzShB,MH2SgBkB,MGzShB,UH0SgBI,KGzShB,YH0SgBtB,MGzShB,MH2SgBkB,MGzShB,KH0SgBI,KGzShB,SH0SgBtB,MGzShB,IH0SgB0B,UAAW,SAAmBS,EAAKuE,EAAQtG,GACvC,MAAiB,KAAVA,EAAc,MAAkB,IAAVA,EAAc,MGzS/D,MH4SgBc,MGzShB,OH0SgBI,KGzShB,eH0SgBtB,MGzShB,MH2SgBkB,MGzShB,OH0SgBI,KGzShB,eH0SgBtB,MGzShB,MH2SgBkB,MGzShB,OH0SgBI,KGzShB,aH0SgBtB,MGzShB,MH2SgBkB,MGzShB,QH0SgBI,KGzShB,YH0SgBtB,MGzShB,MH2SgBkB,MGzShB,OH0SgBI,KGzShB,aH0SgBtB,MGzShB,IH0SgB0B,UAAW,SAAmBS,EAAKuE,EAAQtG,GACvC,MAAO+F,GAAOT,QAAQiB,MAAMC,iBGzShDxG,MH4SgBc,MGzShB,OH0SgBI,KGzShB,aH0SgBtB,MGzShB,IH0SgB0B,UAAW,SAAmBS,EAAKuE,EAAQtG,GACvC,MAAO+F,GAAOT,QAAQiB,MAAMC,iBGzShDxG,QH8SIyG,QAAS,WACLtH,KGzSRsB,YH4SIiG,SACItC,SAAU,W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","file":"static/js/85.6337de0bf5d28aadc368.js","sourcesContent":["webpackJsonp([85],{\n\n/***/ 1001:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"p-20\"\n  }, [_c('div', {\n    staticClass: \"filter-container\",\n    staticStyle: {\n      \"margin-bottom\": \"20px\"\n    }\n  }, [_c('span', [_vm._v(\"提问人：\")]), _vm._v(\" \"), _c('el-input', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"300px\"\n    },\n    attrs: {\n      \"placeholder\": \"请输入提问人\"\n    },\n    model: {\n      value: (_vm.queryData.questionName),\n      callback: function($$v) {\n        _vm.queryData.questionName = $$v\n      },\n      expression: \"queryData.questionName\"\n    }\n  }), _vm._v(\" \"), _c('el-button', {\n    staticClass: \"filter-item\",\n    attrs: {\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.initData\n    }\n  }, [_vm._v(\"查询\")])], 1), _vm._v(\" \"), _c('el-table', {\n    ref: \"singleTable\",\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"data\": _vm.tableData\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"type\": \"index\",\n      \"label\": \"序号\",\n      \"width\": \"80\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.tableHeader), function(item) {\n    return _c('el-table-column', {\n      key: item.prop,\n      attrs: {\n        \"label\": item.label,\n        \"prop\": item.prop,\n        \"width\": item.width,\n        \"min-width\": item.minWidth,\n        \"align\": item.align,\n        \"formatter\": item.formatter,\n        \"show-overflow-tooltip\": \"\"\n      }\n    })\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"fixed\": \"right\",\n      \"label\": \"操作\",\n      \"width\": \"80\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('ul', {\n          staticStyle: {\n            \"list-style\": \"none\",\n            \"padding\": \"0px\"\n          }\n        }, [(scope.row.status === 1) ? _c('li', {\n          staticStyle: {\n            \"float\": \"left\",\n            \"width\": \"30px\"\n          }\n        }, [(_vm.permission.reply) ? _c('el-button', {\n          attrs: {\n            \"type\": \"text\",\n            \"size\": \"small\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.getData(scope.row.id)\n            }\n          }\n        }, [_vm._v(\"回复\\n                        \")]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (scope.row.status === 2) ? _c('li', {\n          staticStyle: {\n            \"float\": \"left\",\n            \"width\": \"30px\"\n          }\n        }, [(_vm.permission.reply) ? _c('el-button', {\n          attrs: {\n            \"type\": \"text\",\n            \"size\": \"small\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.getData(scope.row.id)\n            }\n          }\n        }, [_vm._v(\"查看\\n                        \")]) : _vm._e()], 1) : _vm._e()])]\n      }\n    }])\n  })], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"pagination\"\n  }, [_c('el-pagination', {\n    attrs: {\n      \"current-page\": _vm.queryData.pageNum,\n      \"page-sizes\": [10, 20, 30, 50],\n      \"page-size\": _vm.queryData.pageSize,\n      \"layout\": \"total, sizes, prev, pager, next, jumper\",\n      \"total\": _vm.total\n    },\n    on: {\n      \"size-change\": _vm.userPageSize,\n      \"current-change\": _vm.userPage\n    }\n  })], 1), _vm._v(\" \"), _c('el-dialog', {\n    attrs: {\n      \"title\": \"查看\",\n      \"visible\": _vm.dialogVisible,\n      \"close-on-click-modal\": false\n    },\n    on: {\n      \"update:visible\": function($event) {\n        _vm.dialogVisible = $event\n      },\n      \"close\": _vm.dialogClose\n    }\n  }, [_c('el-form', {\n    ref: \"data\",\n    attrs: {\n      \"model\": _vm.data,\n      \"rules\": _vm.rules\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label-width\": _vm.itemWidth,\n      \"label\": \"提问人\",\n      \"prop\": \"userName\"\n    }\n  }, [_c('el-input', {\n    staticClass: \"input-short\",\n    attrs: {\n      \"disabled\": true,\n      \"auto-complete\": \"off\"\n    },\n    model: {\n      value: (_vm.data.userName),\n      callback: function($$v) {\n        _vm.data.userName = $$v\n      },\n      expression: \"data.userName\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label-width\": _vm.itemWidth,\n      \"label\": \"提问类型\",\n      \"prop\": \"categoryName\"\n    }\n  }, [_c('el-input', {\n    staticClass: \"input-short\",\n    attrs: {\n      \"disabled\": true,\n      \"auto-complete\": \"off\"\n    },\n    model: {\n      value: (_vm.data.categoryName),\n      callback: function($$v) {\n        _vm.data.categoryName = $$v\n      },\n      expression: \"data.categoryName\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label-width\": _vm.itemWidth,\n      \"label\": \"提问内容\",\n      \"prop\": \"questionDesc\"\n    }\n  }, [_c('el-input', {\n    staticClass: \"input-short\",\n    attrs: {\n      \"rows\": 10,\n      \"type\": \"textarea\",\n      \"disabled\": true,\n      \"auto-complete\": \"off\"\n    },\n    model: {\n      value: (_vm.data.questionDesc),\n      callback: function($$v) {\n        _vm.data.questionDesc = $$v\n      },\n      expression: \"data.questionDesc\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label-width\": _vm.itemWidth,\n      \"label\": \"回复内容\",\n      \"prop\": \"answerDesc\"\n    }\n  }, [_c('el-input', {\n    staticClass: \"input-short\",\n    attrs: {\n      \"rows\": 10,\n      \"type\": \"textarea\",\n      \"auto-complete\": \"off\"\n    },\n    model: {\n      value: (_vm.data.answerDesc),\n      callback: function($$v) {\n        _vm.data.answerDesc = $$v\n      },\n      expression: \"data.answerDesc\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": function($event) {\n        _vm.dialogVisible = false\n      }\n    }\n  }, [_vm._v(\"取 消\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.validate\n    }\n  }, [_vm._v(\"保 存\")])], 1)], 1)], 1)\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 219:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_awaitsQuestion_vue__ = __webpack_require__(845);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_awaitsQuestion_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_awaitsQuestion_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_4f1cfdf0_hasScoped_false_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_awaitsQuestion_vue__ = __webpack_require__(1001);\nvar normalizeComponent = __webpack_require__(23)\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_awaitsQuestion_vue___default.a,\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_4f1cfdf0_hasScoped_false_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_awaitsQuestion_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 845:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _promise = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"babel-runtime/core-js/promise\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _fetch = __webpack_require__(24);\n\nvar _fetch2 = _interopRequireDefault(_fetch);\n\nvar _dctp = __webpack_require__(11);\n\nvar _dctp2 = _interopRequireDefault(_dctp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexports.default = {\n    data: function data() {\n        var validate = function validate(rule, value, callback) {\n            if (value === '') {\n                callback(new Error('不能为空'));\n            }\n            callback();\n        };\n        return {\n            itemWidth: '160px',\n            dialogVisible: false,\n            data: {\n                id: '',\n                userName: '',\n                categoryName: '',\n                questionDesc: '',\n                answerDesc: ''\n            },\n            action: '',\n            rules: {\n                answerDesc: [{ validator: validate, trigger: 'blur' }]\n            },\n            queryData: {\n                categoryId: 0,\n                questionName: '',\n                pageNum: 1,\n                pageSize: 10,\n                status: '1'\n            },\n            total: 0,\n            tableData: [],\n            tableHeader: [{\n                label: \"提问人UID\",\n                prop: \"userId\",\n                width: 120\n            }, {\n                label: \"提问人姓名\",\n                prop: \"userName\",\n                width: 120\n            }, {\n                label: \"提问人手机号码\",\n                prop: \"userPhone\",\n                width: 180\n            }, {\n                label: \"状态\",\n                prop: \"status\",\n                width: 120,\n                formatter: function formatter(row, column, value) {\n                    return value === 1 ? '未解决' : value === 2 ? '已解决' : '';\n                }\n            }, {\n                label: \"提问类型\",\n                prop: \"categoryName\",\n                width: 120\n            }, {\n                label: \"提问内容\",\n                prop: \"questionDesc\",\n                width: 300\n            }, {\n                label: \"回复内容\",\n                prop: \"answerDesc\",\n                width: 300\n            }, {\n                label: \"回复管理员\",\n                prop: \"replyName\",\n                width: 120\n            }, {\n                label: \"创建时间\",\n                prop: \"createTime\",\n                width: 240,\n                formatter: function formatter(row, column, value) {\n                    return _dctp2.default.utils.parseDateTimeStr(value);\n                }\n            }, {\n                label: \"回复时间\",\n                prop: \"updateTime\",\n                width: 240,\n                formatter: function formatter(row, column, value) {\n                    return _dctp2.default.utils.parseDateTimeStr(value);\n                }\n            }]\n        };\n    },\n    created: function created() {\n        this.initData();\n    },\n\n    methods: {\n        validate: function validate() {\n            var _this2 = this;\n\n            this.$refs['data'].validate(function (valid) {\n                if (valid) {\n                    switch (_this2.action) {\n                        default:\n                            _this2.modify();\n                            break;\n                    }\n                }\n            });\n        },\n        dialogClose: function dialogClose() {\n            this.resetData();\n        },\n        setData: function setData(data) {\n            var key = void 0;\n            for (key in this.data) {\n                this.data[key] = data[key] === null ? '' : data[key];\n            }\n        },\n        resetData: function resetData() {\n            var key = void 0;\n            for (key in this.data) {\n                switch (key) {\n                    case 'type':\n                        this.data[key] = '2';\n                        break;\n                    default:\n                        this.data[key] = '';\n                }\n            }\n            this.$refs['data'].resetFields();\n            this.action = '';\n        },\n        getList: function getList() {\n            var _this = this;\n            return new _promise2.default(function (resolve, reject) {\n                (0, _fetch2.default)({\n                    url: 'admin/questionanswer',\n                    method: 'get',\n                    params: _this.queryData\n                }).then(function (response) {\n                    if (response.result) {\n                        _this.tableData = response.data.data;\n                        _this.total = response.data.page.count;\n                    }\n                }).catch();\n            });\n        },\n        getData: function getData(id) {\n            var _this = this;\n            return new _promise2.default(function (resolve, reject) {\n                (0, _fetch2.default)({\n                    url: 'admin/questionanswer/' + id,\n                    method: 'get'\n                }).then(function (response) {\n                    if (response.result) {\n                        _this.setData(response.data);\n                        _this.dialogVisible = true;\n                    }\n                }).catch();\n            });\n        },\n        deleteCategory: function deleteCategory(id) {\n            var _this = this;\n            return new _promise2.default(function (resolve, reject) {\n                (0, _fetch2.default)({\n                    url: 'admin/systemcategory/' + id,\n                    method: 'delete'\n                }).then(function (response) {\n                    if (response.result) {\n                        _this.initData();\n                    }\n                    _this.getMessage(response.msg, response.result);\n                }).catch();\n            });\n        },\n        showDeleteDialog: function showDeleteDialog(id) {\n            var _this3 = this;\n\n            this.$confirm('确认删除？', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(function () {\n                _this3.deleteCategory(id);\n            }).catch(function () {\n                _this3.$message.info('操作取消');\n            });\n        },\n        modify: function modify() {\n            var _this = this;\n            return new _promise2.default(function (resolve, reject) {\n                (0, _fetch2.default)({\n                    url: 'admin/questionanswer',\n                    method: 'put',\n                    data: _this.data\n                }).then(function (response) {\n                    if (response.result) {\n                        _this.dialogVisible = false;\n                        _this.initData();\n                    }\n                    _this.getMessage(response.msg, response.result);\n                }).catch();\n            });\n        },\n        query: function query() {\n            var _this = this;\n            return new _promise2.default(function (resolve, reject) {\n                (0, _fetch2.default)({\n                    url: 'admin/questionanswer/query',\n                    method: 'get',\n                    params: _this.queryData\n                }).then(function (response) {\n                    if (response.result) {\n                        _this.tableData = response.data.data;\n                        _this.total = response.data.page.count;\n                    }\n                }).catch();\n            });\n        },\n        initData: function initData() {\n            if (this.queryData.questionName === '') {\n                this.getList();\n            } else {\n                this.query();\n            }\n        },\n\n        //翻页的按钮\n        userPage: function userPage(val) {\n            this.queryData.pageNum = val;\n            this.initData();\n        },\n\n        //获取每页多少条\n        userPageSize: function userPageSize(val) {\n            this.queryData.pageSize = val;\n            this.initData();\n        }\n    }\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/85.6337de0bf5d28aadc368.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"p-20\"\n  }, [_c('div', {\n    staticClass: \"filter-container\",\n    staticStyle: {\n      \"margin-bottom\": \"20px\"\n    }\n  }, [_c('span', [_vm._v(\"提问人：\")]), _vm._v(\" \"), _c('el-input', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"300px\"\n    },\n    attrs: {\n      \"placeholder\": \"请输入提问人\"\n    },\n    model: {\n      value: (_vm.queryData.questionName),\n      callback: function($$v) {\n        _vm.queryData.questionName = $$v\n      },\n      expression: \"queryData.questionName\"\n    }\n  }), _vm._v(\" \"), _c('el-button', {\n    staticClass: \"filter-item\",\n    attrs: {\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.initData\n    }\n  }, [_vm._v(\"查询\")])], 1), _vm._v(\" \"), _c('el-table', {\n    ref: \"singleTable\",\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"data\": _vm.tableData\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"type\": \"index\",\n      \"label\": \"序号\",\n      \"width\": \"80\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.tableHeader), function(item) {\n    return _c('el-table-column', {\n      key: item.prop,\n      attrs: {\n        \"label\": item.label,\n        \"prop\": item.prop,\n        \"width\": item.width,\n        \"min-width\": item.minWidth,\n        \"align\": item.align,\n        \"formatter\": item.formatter,\n        \"show-overflow-tooltip\": \"\"\n      }\n    })\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"fixed\": \"right\",\n      \"label\": \"操作\",\n      \"width\": \"80\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('ul', {\n          staticStyle: {\n            \"list-style\": \"none\",\n            \"padding\": \"0px\"\n          }\n        }, [(scope.row.status === 1) ? _c('li', {\n          staticStyle: {\n            \"float\": \"left\",\n            \"width\": \"30px\"\n          }\n        }, [(_vm.permission.reply) ? _c('el-button', {\n          attrs: {\n            \"type\": \"text\",\n            \"size\": \"small\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.getData(scope.row.id)\n            }\n          }\n        }, [_vm._v(\"回复\\n                        \")]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (scope.row.status === 2) ? _c('li', {\n          staticStyle: {\n            \"float\": \"left\",\n            \"width\": \"30px\"\n          }\n        }, [(_vm.permission.reply) ? _c('el-button', {\n          attrs: {\n            \"type\": \"text\",\n            \"size\": \"small\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.getData(scope.row.id)\n            }\n          }\n        }, [_vm._v(\"查看\\n                        \")]) : _vm._e()], 1) : _vm._e()])]\n      }\n    }])\n  })], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"pagination\"\n  }, [_c('el-pagination', {\n    attrs: {\n      \"current-page\": _vm.queryData.pageNum,\n      \"page-sizes\": [10, 20, 30, 50],\n      \"page-size\": _vm.queryData.pageSize,\n      \"layout\": \"total, sizes, prev, pager, next, jumper\",\n      \"total\": _vm.total\n    },\n    on: {\n      \"size-change\": _vm.userPageSize,\n      \"current-change\": _vm.userPage\n    }\n  })], 1), _vm._v(\" \"), _c('el-dialog', {\n    attrs: {\n      \"title\": \"查看\",\n      \"visible\": _vm.dialogVisible,\n      \"close-on-click-modal\": false\n    },\n    on: {\n      \"update:visible\": function($event) {\n        _vm.dialogVisible = $event\n      },\n      \"close\": _vm.dialogClose\n    }\n  }, [_c('el-form', {\n    ref: \"data\",\n    attrs: {\n      \"model\": _vm.data,\n      \"rules\": _vm.rules\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label-width\": _vm.itemWidth,\n      \"label\": \"提问人\",\n      \"prop\": \"userName\"\n    }\n  }, [_c('el-input', {\n    staticClass: \"input-short\",\n    attrs: {\n      \"disabled\": true,\n      \"auto-complete\": \"off\"\n    },\n    model: {\n      value: (_vm.data.userName),\n      callback: function($$v) {\n        _vm.data.userName = $$v\n      },\n      expression: \"data.userName\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label-width\": _vm.itemWidth,\n      \"label\": \"提问类型\",\n      \"prop\": \"categoryName\"\n    }\n  }, [_c('el-input', {\n    staticClass: \"input-short\",\n    attrs: {\n      \"disabled\": true,\n      \"auto-complete\": \"off\"\n    },\n    model: {\n      value: (_vm.data.categoryName),\n      callback: function($$v) {\n        _vm.data.categoryName = $$v\n      },\n      expression: \"data.categoryName\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label-width\": _vm.itemWidth,\n      \"label\": \"提问内容\",\n      \"prop\": \"questionDesc\"\n    }\n  }, [_c('el-input', {\n    staticClass: \"input-short\",\n    attrs: {\n      \"rows\": 10,\n      \"type\": \"textarea\",\n      \"disabled\": true,\n      \"auto-complete\": \"off\"\n    },\n    model: {\n      value: (_vm.data.questionDesc),\n      callback: function($$v) {\n        _vm.data.questionDesc = $$v\n      },\n      expression: \"data.questionDesc\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label-width\": _vm.itemWidth,\n      \"label\": \"回复内容\",\n      \"prop\": \"answerDesc\"\n    }\n  }, [_c('el-input', {\n    staticClass: \"input-short\",\n    attrs: {\n      \"rows\": 10,\n      \"type\": \"textarea\",\n      \"auto-complete\": \"off\"\n    },\n    model: {\n      value: (_vm.data.answerDesc),\n      callback: function($$v) {\n        _vm.data.answerDesc = $$v\n      },\n      expression: \"data.answerDesc\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": function($event) {\n        _vm.dialogVisible = false\n      }\n    }\n  }, [_vm._v(\"取 消\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.validate\n    }\n  }, [_vm._v(\"保 存\")])], 1)], 1)], 1)\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@13.0.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-4f1cfdf0\",\"hasScoped\":false}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/question/awaitsQuestion.vue\n// module id = 1001\n// module chunks = 85","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=script&index=0!./awaitsQuestion.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4f1cfdf0\\\",\\\"hasScoped\\\":false}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=template&index=0!./awaitsQuestion.vue\"\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/question/awaitsQuestion.vue\n// module id = 219\n// module chunks = 85","<template>\r\n    <div class=\"p-20\">\r\n\r\n        <div class=\"filter-container\" style=\"margin-bottom: 20px\">\r\n            <span>提问人：</span>\r\n            <el-input class=\"filter-item\" style=\"width: 300px;\" placeholder=\"请输入提问人\"\r\n                      v-model=\"queryData.questionName\">\r\n            </el-input>\r\n            <el-button class=\"filter-item\" size=\"small\" @click=\"initData\">查询</el-button>\r\n        </div>\r\n\r\n        <el-table\r\n                ref=\"singleTable\"\r\n                :data=\"tableData\"\r\n                style=\"width: 100%\">\r\n            <el-table-column type=\"index\" label=\"序号\" width=\"80\"></el-table-column>\r\n            <el-table-column\r\n                    v-for=\"item in tableHeader\"\r\n                    :key=\"item.prop\"\r\n                    :label=\"item.label\"\r\n                    :prop=\"item.prop\"\r\n                    :width=\"item.width\"\r\n                    :min-width=\"item.minWidth\"\r\n                    :align=\"item.align\"\r\n                    :formatter=\"item.formatter\"\r\n                    show-overflow-tooltip>\r\n            </el-table-column>\r\n            <el-table-column\r\n                    fixed=\"right\"\r\n                    label=\"操作\"\r\n                    width=\"80\">\r\n                <template scope=\"scope\" class=\"filter-operation\">\r\n                    <ul style=\"list-style: none;padding: 0px\">\r\n                        <li style=\"float:left;width: 30px\" v-if=\"scope.row.status===1\">\r\n                            <el-button\r\n                                    type=\"text\" size=\"small\"\r\n                                    @click=\"getData(scope.row.id)\" v-if=\"permission.reply\">回复\r\n                            </el-button>\r\n                        </li>\r\n                        <li style=\"float:left;width: 30px\" v-if=\"scope.row.status===2\">\r\n                            <el-button\r\n                                    type=\"text\" size=\"small\"\r\n                                    @click=\"getData(scope.row.id)\" v-if=\"permission.reply\">查看\r\n                            </el-button>\r\n                        </li>\r\n                    </ul>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <div class=\"pagination\">\r\n            <el-pagination @size-change=\"userPageSize\" @current-change=\"userPage\"\r\n                           :current-page=\"queryData.pageNum\"\r\n                           :page-sizes=\"[10,20,30, 50]\" :page-size=\"queryData.pageSize\"\r\n                           layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n\r\n        <el-dialog title=\"查看\" :visible.sync=\"dialogVisible\" @close=\"dialogClose\" :close-on-click-modal=\"false\">\r\n            <el-form :model=\"data\" :rules=\"rules\" ref=\"data\">\r\n                <el-form-item :label-width=\"itemWidth\" label=\"提问人\" prop=\"userName\">\r\n                    <el-input class=\"input-short\" v-model=\"data.userName\" :disabled=\"true\"\r\n                              auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item :label-width=\"itemWidth\" label=\"提问类型\" prop=\"categoryName\">\r\n                    <el-input class=\"input-short\" v-model=\"data.categoryName\" :disabled=\"true\"\r\n                              auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item :label-width=\"itemWidth\" label=\"提问内容\" prop=\"questionDesc\">\r\n                    <el-input class=\"input-short\" v-model=\"data.questionDesc\" :rows=\"10\" type=\"textarea\" :disabled=\"true\"\r\n                              auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item :label-width=\"itemWidth\" label=\"回复内容\" prop=\"answerDesc\">\r\n                    <el-input class=\"input-short\" v-model=\"data.answerDesc\" :rows=\"10\" type=\"textarea\"\r\n                              auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"validate\">保 存</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import fetch from '@/utils/fetch';\r\n    import DCTP from '@/utils/dctp';\r\n\r\n\r\n    export default {\r\n        data() {\r\n            let validate = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('不能为空'));\r\n                }\r\n                callback();\r\n            };\r\n            return {\r\n                itemWidth: '160px',\r\n                dialogVisible: false,\r\n                data: {\r\n                    id: '',\r\n                    userName: '',\r\n                    categoryName: '',\r\n                    questionDesc: '',\r\n                    answerDesc: ''\r\n                },\r\n                action: '',\r\n                rules: {\r\n                    answerDesc: [{validator: validate, trigger: 'blur'}]\r\n                },\r\n                queryData: {\r\n                    categoryId: 0,\r\n                    questionName: '',\r\n                    pageNum: 1,\r\n                    pageSize: 10,\r\n                    status: '1'\r\n                },\r\n                total: 0,\r\n                tableData: [],\r\n                tableHeader: [{\r\n                    label: \"提问人UID\",\r\n                    prop: \"userId\",\r\n                    width: 120\r\n                }, {\r\n                    label: \"提问人姓名\",\r\n                    prop: \"userName\",\r\n                    width: 120\r\n                }, {\r\n                    label: \"提问人手机号码\",\r\n                    prop: \"userPhone\",\r\n                    width: 180\r\n                }, {\r\n                    label: \"状态\",\r\n                    prop: \"status\",\r\n                    width: 120,\r\n                    formatter(row, column, value) {\r\n                        return value === 1 ? '未解决' : (value === 2 ? '已解决' : '');\r\n                    }\r\n                }, {\r\n                    label: \"提问类型\",\r\n                    prop: \"categoryName\",\r\n                    width: 120\r\n                }, {\r\n                    label: \"提问内容\",\r\n                    prop: \"questionDesc\",\r\n                    width: 300\r\n                }, {\r\n                    label: \"回复内容\",\r\n                    prop: \"answerDesc\",\r\n                    width: 300\r\n                }, {\r\n                    label: \"回复管理员\",\r\n                    prop: \"replyName\",\r\n                    width: 120\r\n                }, {\r\n                    label: \"创建时间\",\r\n                    prop: \"createTime\",\r\n                    width: 240,\r\n                    formatter(row, column, value) {\r\n                        return DCTP.utils.parseDateTimeStr(value);\r\n                    }\r\n                }, {\r\n                    label: \"回复时间\",\r\n                    prop: \"updateTime\",\r\n                    width: 240,\r\n                    formatter(row, column, value) {\r\n                        return DCTP.utils.parseDateTimeStr(value);\r\n                    }\r\n                }]\r\n            }\r\n        },\r\n        created() {\r\n            this.initData();\r\n        },\r\n        methods: {\r\n            validate() {\r\n                this.$refs['data'].validate((valid) => {\r\n                    if (valid) {\r\n                        switch (this.action) {\r\n                            default:\r\n                                this.modify();\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            dialogClose() {\r\n                this.resetData();\r\n            },\r\n            setData(data) {\r\n                let key;\r\n                for (key in this.data) {\r\n                    this.data[key] = data[key] === null ? '' : data[key];\r\n                }\r\n            },\r\n            resetData() {\r\n                let key;\r\n                for (key in this.data) {\r\n                    switch (key) {\r\n                        case 'type':\r\n                            this.data[key] = '2';\r\n                            break;\r\n                        default:\r\n                            this.data[key] = '';\r\n                    }\r\n                }\r\n                this.$refs['data'].resetFields();\r\n                this.action = '';\r\n            },\r\n            getList() {\r\n                let _this = this;\r\n                return new Promise((resolve, reject) => {\r\n                    fetch({\r\n                        url: 'admin/questionanswer',\r\n                        method: 'get',\r\n                        params: _this.queryData\r\n                    }).then(function (response) {\r\n                        if (response.result) {\r\n                            _this.tableData = response.data.data;\r\n                            _this.total = response.data.page.count;\r\n                        }\r\n                    }).catch();\r\n                })\r\n            },\r\n            getData(id) {\r\n                let _this = this;\r\n                return new Promise((resolve, reject) => {\r\n                    fetch({\r\n                        url: 'admin/questionanswer/' + id,\r\n                        method: 'get'\r\n                    }).then(function (response) {\r\n                        if (response.result) {\r\n                            _this.setData(response.data);\r\n                            _this.dialogVisible = true;\r\n                        }\r\n                    }).catch();\r\n                })\r\n            },\r\n            deleteCategory(id) {\r\n                let _this = this;\r\n                return new Promise((resolve, reject) => {\r\n                    fetch({\r\n                        url: 'admin/systemcategory/' + id,\r\n                        method: 'delete'\r\n                    }).then(function (response) {\r\n                        if (response.result) {\r\n                            _this.initData();\r\n                        }\r\n                        _this.getMessage(response.msg, response.result);\r\n                    }).catch();\r\n                })\r\n            },\r\n            showDeleteDialog(id) {\r\n                this.$confirm('确认删除？', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.deleteCategory(id);\r\n                }).catch(() => {\r\n                    this.$message.info('操作取消');\r\n                });\r\n            },\r\n            modify() {\r\n                let _this = this;\r\n                return new Promise((resolve, reject) => {\r\n                    fetch({\r\n                        url: 'admin/questionanswer',\r\n                        method: 'put',\r\n                        data: _this.data\r\n                    }).then(function (response) {\r\n                        if (response.result) {\r\n                            _this.dialogVisible = false;\r\n                            _this.initData();\r\n                        }\r\n                        _this.getMessage(response.msg, response.result);\r\n                    }).catch();\r\n                })\r\n            },\r\n            query() {\r\n                let _this = this;\r\n                return new Promise((resolve, reject) => {\r\n                    fetch({\r\n                        url: 'admin/questionanswer/query',\r\n                        method: 'get',\r\n                        params: _this.queryData\r\n                    }).then(function (response) {\r\n                        if (response.result) {\r\n                            _this.tableData = response.data.data;\r\n                            _this.total = response.data.page.count;\r\n                        }\r\n                    }).catch();\r\n                })\r\n            },\r\n            initData() {\r\n                if (this.queryData.questionName === '') {\r\n                    this.getList();\r\n                } else {\r\n                    this.query();\r\n                }\r\n            },\r\n            //翻页的按钮\r\n            userPage(val) {\r\n                this.queryData.pageNum = val;\r\n                this.initData();\r\n            },\r\n            //获取每页多少条\r\n            userPageSize(val) {\r\n                this.queryData.pageSize = val;\r\n                this.initData();\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/question/awaitsQuestion.vue?69c3857b"],"sourceRoot":""}